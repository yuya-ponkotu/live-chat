
# https://docs.docker.com/compose/compose-file/compose-versioning/
version: '3.8'

services:

  db:
    # DockerHubにあるmysql8.0のイメージを使用
    image: mysql:8.0.28
    # MySQL8.0以降の認証方式に元に戻す設定
    command: --default-authentication-plugin=mysql_native_password
    # dbディレクトリをホスト側に作成してコンテナ側と同期
    volumes: 
      - "./db:/var/lib/mysql"
    # .envの環境変数を展開してMYSQLコンテナのパスワードを登録
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    #明示的にamd64のイメージを取得する。下記エラーが発生してしまうため
    #standard_init_linux.go:228: exec user process caused: exec format error
    platform: linux/x86_64

  backend:
    # ./backendにあるDockerfiｌｅをもとにイメージを生成する
    build:
      context: ./backend
      # .envの環境変数を展開して、WORKDIRという引数を登録し、backend/Dockerfileに渡す
      args:
        WORKDIR: $WORKDIR
    # ホストのRailsファイルとBack用のコンテナを同期
    volumes:
      - "./backend:/$WORKDIR"
    # .envの環境変数を展開して、Railsの環境変数MYSQL_ROOT_PASSWORDを登録
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    # ホストの8000番ポートをコンテナの3000番ポートに繋ぐ
    ports:
      - "8000:3000"
    # dbコンテナ起動後にbackendコンテナを起動
    depends_on:
      - db

  frontend:
    # frontendにあるDockerfileをもとにイメージを生成する
    build:
      context: ./frontend
      # .envの環境変数を展開して、WORKDIRという引数を登録し、frontend/Dockerfileに渡す
      args:
        WORKDIR: $WORKDIR
    # frontendディレクトリにあるホストのファイルとコンテナを同期
    volumes:
      - "./frontend:/$WORKDIR"
    # ホストの3000番ポートをコンテナの3000番ポートに繋ぐ
    ports:
      - "3000:8080"
    # backendコンテナ起動後にfrontendコンテナを起動
    depends_on:
      - backend