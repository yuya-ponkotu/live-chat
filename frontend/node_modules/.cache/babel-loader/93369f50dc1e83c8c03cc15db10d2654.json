{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode, Fragment as _Fragment } from \"vue\"; // Styles\n\nimport \"./VListItem.css\"; // Components\n\nimport { VListItemAvatar } from \"./VListItemAvatar.mjs\";\nimport { VListItemHeader } from \"./VListItemHeader.mjs\";\nimport { VListItemIcon } from \"./VListItemIcon.mjs\";\nimport { VListItemSubtitle } from \"./VListItemSubtitle.mjs\";\nimport { VListItemTitle } from \"./VListItemTitle.mjs\"; // Composables\n\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useSelectLink } from \"../../composables/selectLink.mjs\";\nimport { useList } from \"./list.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\n\nimport { computed, onMounted, watch } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\";\nimport { useNestedItem } from \"../../composables/nested/nested.mjs\"; // Types\n\nexport const VListItem = genericComponent()({\n  name: 'VListItem',\n  directives: {\n    Ripple\n  },\n  props: {\n    active: Boolean,\n    activeColor: String,\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: String,\n    disabled: Boolean,\n    lines: String,\n    nav: Boolean,\n    prependAvatar: String,\n    prependIcon: String,\n    subtitle: String,\n    title: String,\n    value: null,\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'text'\n    })\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const link = useLink(props, attrs);\n    const id = computed(() => {\n      var _props$value;\n\n      return (_props$value = props.value) != null ? _props$value : link.href.value;\n    });\n    const {\n      select,\n      isSelected,\n      isIndeterminate,\n      isGroupActivator,\n      root,\n      parent\n    } = useNestedItem(id, false);\n    const list = useList();\n    const isActive = computed(() => {\n      var _link$isExactActive;\n\n      return props.active || ((_link$isExactActive = link.isExactActive) == null ? void 0 : _link$isExactActive.value) || isSelected.value;\n    });\n    const roundedProps = computed(() => props.rounded || props.nav);\n    const variantProps = computed(() => {\n      var _props$activeColor;\n\n      return {\n        color: isActive.value ? (_props$activeColor = props.activeColor) != null ? _props$activeColor : props.color : props.color,\n        variant: props.variant\n      };\n    });\n    onMounted(() => {\n      var _link$isExactActive2;\n\n      if ((_link$isExactActive2 = link.isExactActive) != null && _link$isExactActive2.value && parent.value != null) {\n        root.open(parent.value, true);\n      }\n    });\n    watch(() => {\n      var _link$isExactActive3;\n\n      return (_link$isExactActive3 = link.isExactActive) == null ? void 0 : _link$isExactActive3.value;\n    }, val => {\n      if (val && parent.value != null) {\n        root.open(parent.value, true);\n      }\n    });\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(variantProps);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(roundedProps);\n    const lineClasses = computed(() => props.lines ? `v-list-item--${props.lines}-line` : undefined);\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      select,\n      isSelected: isSelected.value,\n      isIndeterminate: isIndeterminate.value\n    }));\n    useSelectLink(link, select);\n    useRender(() => {\n      var _slots$prepend, _slots$default, _slots$append;\n\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasColor = !list || isSelected.value || isActive.value;\n      const hasTitle = slots.title || props.title;\n      const hasSubtitle = slots.subtitle || props.subtitle;\n      const hasHeader = !!(hasTitle || hasSubtitle);\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);\n      const isClickable = !props.disabled && (link.isClickable.value || props.value != null && !!list);\n      list == null ? void 0 : list.updateHasPrepend(hasPrepend);\n      return _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-list-item', {\n          'v-list-item--active': isActive.value,\n          'v-list-item--disabled': props.disabled,\n          'v-list-item--link': isClickable,\n          'v-list-item--nav': props.nav,\n          'v-list-item--prepend': !hasPrepend && (list == null ? void 0 : list.hasPrepend.value),\n          [`${props.activeClass}`]: isActive.value\n        }, themeClasses.value, borderClasses.value, hasColor ? colorClasses.value : undefined, densityClasses.value, elevationClasses.value, lineClasses.value, roundedClasses.value, variantClasses.value],\n        \"style\": [hasColor ? colorStyles.value : undefined, dimensionStyles.value],\n        \"href\": link.href.value,\n        \"tabindex\": isClickable ? 0 : undefined,\n        \"onClick\": isClickable && (e => {\n          var _link$navigate;\n\n          if (isGroupActivator) return;\n          (_link$navigate = link.navigate) == null ? void 0 : _link$navigate.call(link, e);\n          select(!isSelected.value, e);\n        })\n      }, {\n        default: () => [genOverlays(isClickable || isActive.value, 'v-list-item'), hasPrepend && _createVNode(_Fragment, null, [props.prependAvatar && _createVNode(VListItemAvatar, {\n          \"image\": props.prependAvatar,\n          \"start\": true\n        }, null), props.prependIcon && _createVNode(VListItemIcon, {\n          \"icon\": props.prependIcon,\n          \"start\": true\n        }, null), (_slots$prepend = slots.prepend) == null ? void 0 : _slots$prepend.call(slots, slotProps.value)]), hasHeader && _createVNode(VListItemHeader, null, {\n          default: () => [hasTitle && _createVNode(VListItemTitle, null, {\n            default: () => [slots.title ? slots.title({\n              title: props.title\n            }) : props.title]\n          }), hasSubtitle && _createVNode(VListItemSubtitle, null, {\n            default: () => [slots.subtitle ? slots.subtitle({\n              subtitle: props.subtitle\n            }) : props.subtitle]\n          })]\n        }), (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, slotProps.value), hasAppend && _createVNode(_Fragment, null, [(_slots$append = slots.append) == null ? void 0 : _slots$append.call(slots, slotProps.value), props.appendAvatar && _createVNode(VListItemAvatar, {\n          \"image\": props.appendAvatar,\n          \"end\": true\n        }, null), props.appendIcon && _createVNode(VListItemIcon, {\n          \"icon\": props.appendIcon,\n          \"end\": true\n        }, null)])]\n      }), [[_resolveDirective(\"ripple\"), isClickable]]);\n    });\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VListItemAvatar","VListItemHeader","VListItemIcon","VListItemSubtitle","VListItemTitle","genOverlays","makeVariantProps","useVariant","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeRouterProps","useLink","makeTagProps","makeThemeProps","provideTheme","useSelectLink","useList","Ripple","computed","onMounted","watch","genericComponent","useRender","useNestedItem","VListItem","name","directives","props","active","Boolean","activeColor","String","activeClass","appendAvatar","appendIcon","disabled","lines","nav","prependAvatar","prependIcon","subtitle","title","value","variant","setup","attrs","slots","_ref","link","id","href","select","isSelected","isIndeterminate","isGroupActivator","root","parent","list","isActive","isExactActive","_link$isExactActive","roundedProps","rounded","variantProps","color","open","_link$isExactActive3","val","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","roundedClasses","lineClasses","undefined","slotProps","Tag","isLink","tag","hasColor","hasTitle","hasSubtitle","hasHeader","hasAppend","append","hasPrepend","prepend","isClickable","updateHasPrepend","e","navigate","default","_slots$prepend","_slots$default","_slots$append"],"sources":["../../../src/components/VList/VListItem.tsx"],"sourcesContent":["// Styles\nimport './VListItem.sass'\n\n// Components\nimport { VListItemAvatar } from './VListItemAvatar'\nimport { VListItemHeader } from './VListItemHeader'\nimport { VListItemIcon } from './VListItemIcon'\nimport { VListItemSubtitle } from './VListItemSubtitle'\nimport { VListItemTitle } from './VListItemTitle'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useSelectLink } from '@/composables/selectLink'\nimport { useList } from './list'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, onMounted, watch } from 'vue'\nimport { genericComponent, useRender } from '@/util'\nimport { useNestedItem } from '@/composables/nested/nested'\n\n// Types\nimport type { MakeSlots } from '@/util'\nimport type { PropType } from 'vue'\n\ntype ListItemSlot = {\n  isActive: boolean\n  activate: (value: boolean) => void\n  isSelected: boolean\n  select: (value: boolean) => void\n}\n\nexport type ListItemTitleSlot = {\n  title?: string\n}\n\nexport type ListItemSubtitleSlot = {\n  subtitle?: string\n}\n\nexport const VListItem = genericComponent<new () => {\n  $slots: MakeSlots<{\n    prepend: [ListItemSlot]\n    append: [ListItemSlot]\n    default: [ListItemSlot]\n    title: [ListItemTitleSlot]\n    subtitle: [ListItemSubtitleSlot]\n  }>\n}>()({\n  name: 'VListItem',\n\n  directives: { Ripple },\n\n  props: {\n    active: Boolean,\n    activeColor: String,\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: String,\n    disabled: Boolean,\n    lines: String as PropType<'one' | 'two' | 'three'>,\n    nav: Boolean,\n    prependAvatar: String,\n    prependIcon: String,\n    subtitle: String,\n    title: String,\n    value: null,\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'text' } as const),\n  },\n\n  setup (props, { attrs, slots }) {\n    const link = useLink(props, attrs)\n    const id = computed(() => props.value ?? link.href.value)\n    const { select, isSelected, isIndeterminate, isGroupActivator, root, parent } = useNestedItem(id, false)\n    const list = useList()\n    const isActive = computed(() => {\n      return props.active || link.isExactActive?.value || isSelected.value\n    })\n    const roundedProps = computed(() => props.rounded || props.nav)\n    const variantProps = computed(() => ({\n      color: isActive.value ? props.activeColor ?? props.color : props.color,\n      variant: props.variant,\n    }))\n\n    onMounted(() => {\n      if (link.isExactActive?.value && parent.value != null) {\n        root.open(parent.value, true)\n      }\n    })\n\n    watch(() => link.isExactActive?.value, val => {\n      if (val && parent.value != null) {\n        root.open(parent.value, true)\n      }\n    })\n\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(roundedProps)\n    const lineClasses = computed(() => props.lines ? `v-list-item--${props.lines}-line` : undefined)\n\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      select,\n      isSelected: isSelected.value,\n      isIndeterminate: isIndeterminate.value,\n    }))\n\n    useSelectLink(link, select)\n\n    useRender(() => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasColor = !list || isSelected.value || isActive.value\n      const hasTitle = (slots.title || props.title)\n      const hasSubtitle = (slots.subtitle || props.subtitle)\n      const hasHeader = !!(hasTitle || hasSubtitle)\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon)\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon)\n      const isClickable = !props.disabled && (link.isClickable.value || (props.value != null && !!list))\n\n      list?.updateHasPrepend(hasPrepend)\n\n      return (\n        <Tag\n          class={[\n            'v-list-item',\n            {\n              'v-list-item--active': isActive.value,\n              'v-list-item--disabled': props.disabled,\n              'v-list-item--link': isClickable,\n              'v-list-item--nav': props.nav,\n              'v-list-item--prepend': !hasPrepend && list?.hasPrepend.value,\n              [`${props.activeClass}`]: isActive.value,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            lineClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            dimensionStyles.value,\n          ]}\n          href={ link.href.value }\n          tabindex={ isClickable ? 0 : undefined }\n          onClick={ isClickable && ((e: MouseEvent) => {\n            if (isGroupActivator) return\n\n            link.navigate?.(e)\n            select(!isSelected.value, e)\n          })}\n          v-ripple={ isClickable }\n        >\n          { genOverlays(isClickable || isActive.value, 'v-list-item') }\n\n          { hasPrepend && (\n            <>\n              { props.prependAvatar && (\n                <VListItemAvatar\n                  image={ props.prependAvatar }\n                  start\n                />\n              ) }\n\n              { props.prependIcon && (\n                <VListItemIcon\n                  icon={ props.prependIcon }\n                  start\n                />\n              ) }\n\n              { slots.prepend?.(slotProps.value) }\n            </>\n          ) }\n\n          { hasHeader && (\n            <VListItemHeader>\n              { hasTitle && (\n                <VListItemTitle>\n                  { slots.title\n                    ? slots.title({ title: props.title })\n                    : props.title\n                  }\n                </VListItemTitle>\n              ) }\n\n              { hasSubtitle && (\n                <VListItemSubtitle>\n                  { slots.subtitle\n                    ? slots.subtitle({ subtitle: props.subtitle })\n                    : props.subtitle\n                  }\n                </VListItemSubtitle>\n              ) }\n            </VListItemHeader>\n          ) }\n\n          { slots.default?.(slotProps.value) }\n\n          { hasAppend && (\n            <>\n              { slots.append?.(slotProps.value) }\n\n              { props.appendAvatar && (\n                <VListItemAvatar\n                  image={ props.appendAvatar }\n                  end\n                />\n              ) }\n\n              { props.appendIcon && (\n                <VListItemIcon\n                  icon={ props.appendIcon }\n                  end\n                />\n              ) }\n            </>\n          ) }\n        </Tag>\n      )\n    })\n  },\n})\n\nexport type VListItem = InstanceType<typeof VListItem>\n"]},"metadata":{},"sourceType":"module"}